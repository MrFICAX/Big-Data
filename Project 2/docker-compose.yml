version: "3.9"

services:
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      - kafka
    environment:
      SCRIPT: producer/producer.py
      DATA: data/geolife_gps_sorted.csv
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: locations
      KAFKA_INTERVAL: 3

  consumer_spark:
    build: 
      context: .
      dockerfile: consumer_spark/Dockerfile
    ports:
      - "4040:4040"
    environment:
      SCRIPT: consumer_spark/consumer_spark.py
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: locations
      KAFKA_CONSUMER_GROUP: Spark-Group

  consumer_flink:
    build:
      context: .
      dockerfile: consumer_flink/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SCRIPT: consumer_flink/consumer_flink.py
      KAFKA_HOST: kafka:9092
      ZOOKEEPER_HOST: zookeeper:2181
      KAFKA_TOPIC: locations
      KAFKA_CONSUMER_GROUP: Flink-Group
  cassandra:
    image: cassandra:4.0
    ports:
      - 9042:9042
    volumes:
      - ~/apps/cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=cloudinfra