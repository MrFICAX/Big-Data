version: "3"

services:
  kafka-3:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-3
    ports:
      - "2181:2181"

  producer-3:
    container_name: producer-3
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      - kafka-3
    environment:
      SCRIPT: producer/producer.py
      DATA: data/geolife_gps_sorted_without_nodata.csv
      KAFKA_HOST: kafka-3:9092
      KAFKA_TOPIC: locations
      KAFKA_INTERVAL: 4
          
  spark-master-3:
    image: bde2020/spark-master:3.1.2-hadoop3.2
    container_name: spark-master-3
    ports:
      - "8070:8070"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8070

  spark-worker-1-3:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-1-3
    depends_on:
      - spark-master-3
    ports:
      - "8071:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master-3:7077"
      - SPARK_WORKER_WEBUI_PORT=8071

  spark-worker-2-3:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-2-3
    depends_on:
      - spark-master-3
    ports:
      - "8072:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master-3:7077"
      - SPARK_WORKER_WEBUI_PORT=8071

  influxdb:
    image: influxdb:2.1.1
    container_name: influxdb
    hostname: influxdb
    environment:
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_DB=geolifegpsdb
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=2c83186a-caab-425a-9594-9d4c00544939
    ports:
      - 8086:8086

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    depends_on:
      - influxdb
    ports:
      - 3000:3000

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode-3
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - $HOME/data:/data
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-db/hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode-3
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop-db/hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager-3
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop-db/hadoop.env

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager-3
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop-db/hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver-3
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop-db/hadoop.env

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:


networks:
  default:
    name: FT_project3_network  